apply plugin: 'com.android.application'

//读取签名证书的密码和名字
def keystorePropertiesFile = rootProject.file("release-key/keystore.properties")
def keystorePropeties = new Properties();
keystorePropeties.load(new FileInputStream(keystorePropertiesFile));

//命令行：gradlew assembleRelease

android {
    compileSdkVersion 22
    buildToolsVersion '24.0.2'
    defaultConfig {
        applicationId "cn.com.pyc.drm"
        minSdkVersion 18
        targetSdkVersion 22
        versionCode 54
        versionName '3.0.4'  //修改versionCode,versionName,"3.0.0.20170809_release"，关闭Log
    }

    //签名,调试运行时候使用
    signingConfigs {
        sign {
            //storeFile file("E:/AndroidStudioProject/SZ/release-key/suizhi.keystore")
            storeFile file(keystorePropeties['storeFile'])
            storePassword keystorePropeties['storePassword']
            keyAlias keystorePropeties['keyAlias']
            keyPassword keystorePropeties['keyPassword']
        }
    }

    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"            //不输出LOG信息
            minifyEnabled true                                          //开启混淆
            zipAlignEnabled true                                        //zipAlign优化
            shrinkResources true                                        //移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign                           //使用签名
            resValue "string", "app_building", "3.0.4.20171208_release"
        }
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"            //输出LOG信息
            minifyEnabled false                                         //关闭混淆
            zipAlignEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.sign                           //使用签名
            resValue "string", "app_building", "3.0.4.20171208_debug"
        }
    }

    //配置打包出的apk名称eg:suizhi_v2.3.5_201612121530-13服.apk
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def env = 'release'.equalsIgnoreCase(variant.buildType.name) ? "正式服" : "测试服"
            def apkName = 'suizhi' + "_v${variant.versionName}" + "_${releaseTime()}" + "-${env}" + '.apk'
            def nName = output.outputFile.name.replace(output.outputFile.name, apkName)
            output.outputFile = new File(output.outputFile.parent, nName)
            //删除掉unaligned apk
            if (output.zipAlign != null) {
                output.zipAlign.doLast {
                    output.zipAlign.inputFile.delete()
                }
            }
        }
    }

    //执行lint检查，有任何的错误或者警告提示，都会终止构建，我们可以将其关掉。
    lintOptions {
        abortOnError false
        //checkReleaseBuilds false
        disable 'MissingTranslation' // 防止在发布的时候出现因MissingTranslation导致Build Failed!
    }

    //针对不同的APP分发渠道，我们可以定义不同的 product flavor
    productFlavors {
        //local {}
        //market360 {}
        productFlavors.all {
            //flavor -> flavor.manifestPlaceholders = [CHANNEL_NAME: name]
        }
    }

    compileOptions {
        encoding 'UTF-8'
    }
}

//定义发布时间
def releaseTime() {
    return new Date().format("yyyyMMdd")
}

//sina weibo
allprojects {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://dl.bintray.com/thelasterstar/maven/" }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile files('libs/bcprov-jdk15-143.jar')
    compile files('libs/commons-net-3.3.jar')
    compile files('libs/eventbus-2.4.0.jar')
    compile files('libs/fastjson-1.1.26.jar')
    compile files('libs/jpush-sdk-release1.8.0.jar')
    compile files('libs/open_sdk_r5793_lite.jar')
    compile files('libs/sqlcipher.jar')
    compile files('libs/zxing-core-3.2.1.jar')
    compile files('libs/pyc-loger-1.1.jar')
    compile files('libs/alipaySingle-20170510.jar')
    compile files('libs/wechat-sdk-android-without-mta-1.3.4.jar')
    //引用的第三方资源库
    compile 'com.wang.avi:library:2.1.3'
    compile 'org.xutils:xutils:3.5.0'
    compile 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:design:22.2.1'
    compile 'com.android.support:recyclerview-v7:22.2.1'
    compile 'com.sina.weibo.sdk:core:4.1.4:openDefaultRelease@aar'
}
